package main

import (
	"github.com/99designs/gqlgen/graphql/handler/extension"
	"log"
	"net/http"
	"os"
	"yes-blog/graph"
	"yes-blog/graph/generated"
	postController "yes-blog/internal/controller/post"
	userController "yes-blog/internal/controller/user"
	"yes-blog/pkg/database/mongodb"

	"github.com/99designs/gqlgen/graphql/handler"
	"github.com/99designs/gqlgen/graphql/playground"
)

const defaultPort = "8080"
const queryComplexity = 8

func main() {
	port := os.Getenv("PORT")
	if port == "" {
		port = defaultPort
	}

	//setting a mongodb.UserMongoDriver for UserDBDriver filed of our controller.GetUserController instance
	userController.GetUserController().SetDBDriver(mongodb.NewUserMongoDriver("yes-blog", "users"))
	postController.GetPostController().SetDBDriver(mongodb.NewPostMongoDriver("yes-blog", "users"))

	// generated by graphql
	srv := handler.NewDefaultServer(generated.NewExecutableSchema(generated.Config{Resolvers: &graph.Resolver{}}))
	srv.Use(extension.FixedComplexityLimit(queryComplexity))

	http.Handle("/", playground.Handler("yes-blog playground", "/query"))
	http.Handle("/query", srv)

	log.Printf("connect to http://localhost:%s/ for GraphQL playground", port)
	log.Fatal(http.ListenAndServe(":"+port, nil))
}
