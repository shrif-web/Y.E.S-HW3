// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CreatePostPayload interface {
	IsCreatePostPayload()
}

type CreateUserPayload interface {
	IsCreateUserPayload()
}

type DeletePostPayload interface {
	IsDeletePostPayload()
}

type Exception interface {
	IsException()
}

type LoginPayload interface {
	IsLoginPayload()
}

type UpdatePostPayload interface {
	IsUpdatePostPayload()
}

type UpdateUserPayload interface {
	IsUpdateUserPayload()
}

type DuplicateUsernameException struct {
	Message string `json:"message"`
}

func (DuplicateUsernameException) IsException()         {}
func (DuplicateUsernameException) IsCreateUserPayload() {}

type InternalServerException struct {
	Message string `json:"message"`
}

func (InternalServerException) IsException()         {}
func (InternalServerException) IsCreateUserPayload() {}
func (InternalServerException) IsUpdateUserPayload() {}
func (InternalServerException) IsLoginPayload()      {}
func (InternalServerException) IsCreatePostPayload() {}
func (InternalServerException) IsDeletePostPayload() {}
func (InternalServerException) IsUpdatePostPayload() {}

type Login struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type NoUserFoundException struct {
	Message string `json:"message"`
}

func (NoUserFoundException) IsException()         {}
func (NoUserFoundException) IsUpdateUserPayload() {}
func (NoUserFoundException) IsCreatePostPayload() {}
func (NoUserFoundException) IsDeletePostPayload() {}
func (NoUserFoundException) IsUpdatePostPayload() {}

type Post struct {
	ID        string `json:"id"`
	CreatedBy *User  `json:"created_by"`
	CreatedAt int    `json:"created_at"`
	Content   string `json:"content"`
	Title     string `json:"title"`
}

func (Post) IsCreatePostPayload() {}

type PostEmptyException struct {
	Message string `json:"message"`
}

func (PostEmptyException) IsException()         {}
func (PostEmptyException) IsCreatePostPayload() {}
func (PostEmptyException) IsUpdatePostPayload() {}

type PostNotFoundException struct {
	Message string `json:"message"`
}

func (PostNotFoundException) IsException()         {}
func (PostNotFoundException) IsDeletePostPayload() {}
func (PostNotFoundException) IsUpdatePostPayload() {}

type PostOperationSuccessfull struct {
	Message *string `json:"message"`
}

func (PostOperationSuccessfull) IsDeletePostPayload() {}
func (PostOperationSuccessfull) IsUpdatePostPayload() {}

type RefreshTokenInput struct {
	Token string `json:"token"`
}

type TargetPost struct {
	Title   string `json:"title"`
	Content string `json:"content"`
}

type TargetUser struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Email    string `json:"email"`
}

type ToBeUser struct {
	Username *string `json:"username"`
	Password *string `json:"password"`
	Email    *string `json:"email"`
}

type Token struct {
	Token string `json:"token"`
}

func (Token) IsLoginPayload() {}

type User struct {
	ID    string  `json:"id"`
	Name  string  `json:"name"`
	Email string  `json:"email"`
	Posts []*Post `json:"posts"`
}

func (User) IsCreateUserPayload() {}
func (User) IsUpdateUserPayload() {}

type UserNotAllowedException struct {
	Message string `json:"message"`
}

func (UserNotAllowedException) IsException()         {}
func (UserNotAllowedException) IsDeletePostPayload() {}
func (UserNotAllowedException) IsUpdatePostPayload() {}

type UserPassMissMatchException struct {
	Message string `json:"message"`
}

func (UserPassMissMatchException) IsException()    {}
func (UserPassMissMatchException) IsLoginPayload() {}
