type User {
    id: ID!
    name: String!
    email: String!
    posts(start:Int=0,amount:Int=5): [Post!]!
}

type Post {
    id: ID!
    created_by: User!
    created_at: Int!
    content: String!
    title: String!
}

type Query {
    user(name:String!): User
    users(start:Int!=0,amount:Int!=5): [User!]!

    post(id:String!): Post!
    posts(start:Int!=0,amount:Int!=5): [Post!]!
    postsOfUser(userName:String!): [Post!]!
}

input TargetPost {
    title: String!
    content: String!
    authorName: String!
}

input RefreshTokenInput{
    token: String!
}

input TargetUser {
    username: String!
    password: String!
    email   : String!
}

input ToBeUser {
    username: String
    password: String
    email:    String
}

input Login {
    username: String!
    password: String!
}

type Token{
    token:String!
}

interface Exception{
    message:String!
}
type DuplicateUsernameException implements Exception{
    message:String!
}
type NoUserFoundException implements Exception{
    message:String!
}
type UserPassMissMatchException implements Exception{
    message:String!
}
type InternalServerException implements Exception{
    message:String!
}
type UserNotAllowedException implements Exception{
    message:String!
}
type PostNotFoundException implements Exception{
    message:String!
}
type PostEmptyException implements Exception{
    message:String!
}
type PostOperationSuccessfull{
    message:String
}
union CreateUserPayload = User  | DuplicateUsernameException | InternalServerException
union UpdateUserPayload = User  | NoUserFoundException       | InternalServerException
union LoginPayload      = Token | UserPassMissMatchException | InternalServerException
union CreatePostPayload = Post  | NoUserFoundException | PostEmptyException  | InternalServerException
union DeletePostPayload = PostOperationSuccessfull | UserNotAllowedException | NoUserFoundException | PostNotFoundException | InternalServerException
union UpdatePostPayload = PostOperationSuccessfull | UserNotAllowedException | PostEmptyException   | NoUserFoundException | PostNotFoundException | InternalServerException

type Mutation {
    createUser(target: TargetUser!): CreateUserPayload!
    deleteUser(name: String!): String!
    updateUser(target: String!, toBe: ToBeUser!): UpdateUserPayload!

    login(input: Login!): LoginPayload!
    refreshToken(input: RefreshTokenInput!): String!

    createPost(input: TargetPost!): CreatePostPayload!
    deletePost(targetID: String!, authorName: String!): DeletePostPayload!
    updatePost(targetID: String!, input: TargetPost!): UpdatePostPayload!
}
