{
	"info": {
		"_postman_id": "b6cf4020-809d-469f-bf99-eead320e8ac5",
		"name": "yes-blog",
		"description": "API document for www.yes.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "login",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "DNT",
										"value": "1"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation login($username:String!,$password:String!){\n  login(input:{username:$username,password:$password}){\n    __typename\n    ... on Token{\n      token\n    }\n    ... on Exception{\n      message\n    }\n  }\n}",
										"variables": "{\n    \"username\":\"ArshiA\",\n    \"password\":\"akhavan\"\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "this API is used to generate a JWT token which is used to identify the logged in user"
							},
							"response": []
						},
						{
							"name": "refresh token",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"value": "Bearer {{whoami}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation refreshToken{\n  refreshToken{\n    __typename\n    ... on Token{\n      token\n    }\n    ... on Exception{\n      message\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "this API is used to refresh the users API\nnote that expired token will not get refreshed and need to be logged in again to use"
							},
							"response": []
						}
					]
				},
				{
					"name": "Query",
					"item": [
						{
							"name": "User",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query getUser($username:String){\n    user(name:$username){\n        name\n        email\n        posts{\n            title\n        }\n    }\n}",
										"variables": "{\n    \"username\":\"ArshiA\"\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "request to get data about the specified user\ndoesnt require loggin"
							},
							"response": []
						},
						{
							"name": "Me",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"value": "Bearer {{whoami}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query getMe{\n    user{\n        name\n        email\n        posts{\n            title\n        }\n    }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "returns data about the logged in user\nrequire login before you can user this query"
							},
							"response": []
						},
						{
							"name": "Users",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query getUsers($start:Int!,$amount:Int!){\n    users(start:$start,amount:$amount){\n    name\n    isAdmin\n    email\n    posts{\n        title\n        created_by{\n            name\n            posts{\n                title\n            }\n        }\n    }\n  }\n}",
										"variables": "{\n    \"start\":0,\n    \"amount\":10\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "returns a list of Users \noptional :\n    can get start and amount parameters\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Mutation",
					"item": [
						{
							"name": "Update",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"value": "Bearer {{whoami}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateUser($toBe:ToBeUser!){\n  updateUser(toBe:$toBe){\n    __typename\n    ... on User{\n      name\n    }\n    ... on Exception{\n      message\n    }\n  }\n}",
										"variables": "{\n    \"toBe\":{\n        \"password\":\"akhavan\"\n    }\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "takes any combination of username password and email\nand updates the logged in user if possible\n(request would be rejected should the new username were already taken by another user)"
							},
							"response": []
						},
						{
							"name": "Delete",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"value": "Bearer {{whoami}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation deleteUser{\n  deleteUser{\n    __typename\n    ... on OperationSuccessfull{\n      message\n    }\n    ... on Exception{\n      message\n    }\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "deletes the currenctly logged in user"
							},
							"response": []
						},
						{
							"name": "Sign up",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation signUp($target:TargetUser!){\n  createUser(target:$target){\n    __typename\n    ... on User{\n      name\n    }\n    ... on Exception{\n      message\n    }\n  }\n}\n",
										"variables": "{\n    \"target\":{\n        \"username\":\"ArshiA\",\n        \"password\":\"akhavan\",\n        \"email\":\"aa@yes.io\"\n    }\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "Create new user with the given information\ndoesnt need authentication"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "Mutation",
					"item": [
						{
							"name": "New Post",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"value": "Bearer {{whoami}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation newPost($title:String!,$content:String!){\n    createPost(input:{title:$title, content:$content}){\n    __typename\n    ... on Post{\n      id\n      title\n    }\n    ... on Exception{\n      message\n    }\n  }\n}",
										"variables": "{\n    \"title\":\"ArshiA joon\",\n    \"content\":\"ArshiA bastani dad!\"\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "creates new post for the logged in user\nrequires login\ntakes title and content as input"
							},
							"response": []
						},
						{
							"name": "Delete",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"type": "text",
										"value": "Bearer {{whoami}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation delete($id:String!){\n  deletePost(targetID:$id){\n   __typename\n    ... on Post{\n      title\n      content\n    }\n    ... on Exception{\n      message\n    }\n  }\n}",
										"variables": "{\n    \"id\":\"5fef997308ff2901cc06c981\"\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "Deletes the post with the given id\nrequires login\n"
							},
							"response": []
						},
						{
							"name": "Update",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "whoami",
										"value": "Bearer {{whoami}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation update($title:String!,$content:String!,$id:String!){\n  updatePost(targetID:$id, input:{title:$title, content:$content}){\n    __typename\n    ... on Post{\n      title\n      content\n    }\n    ... on Exception{\n      message\n    }\n  }\n}",
										"variables": "{\n    \"id\":\"5fef997308ff2901cc06c981\",\n    \"content\":\"some new content\",\n    \"title\":\"new title\"\n\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "updates a post identified by its id can update title and/or content requires login\n\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "Query",
					"item": [
						{
							"name": "Get Post",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query getPost($id:String!){\n  post(id:$id){\n    id\n    title\n    content\n    created_by{\n      name\n      posts{\n        id\n      }\n    }\n    created_at\n  }\n}",
										"variables": "{\n    \"id\":\"5fef997308ff2901cc06c981\"\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "returns a post by its id"
							},
							"response": []
						},
						{
							"name": "Timeline",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query getPosts($start:Int!, $amount:Int!) {\n  timeline(start: $start, amount: $amount) {\n    id\n    title\n    content\n    created_at\n    created_by{\n      name\n      posts{\n        id\n      }\n    }\n  }\n}",
										"variables": "{\n    \"start\" :   0,\n    \"amount\":   10 \n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "returns a list of posts , sorted by \"created_at\" feild, decending\n\ncan get optional parameters, start and amount"
							},
							"response": []
						},
						{
							"name": "Posts of User",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query getPostByUser($username:String) {\n  postsOfUser(username: $username) {\n    id\n    title\n    content\n    created_by {\n      id\n      name\n      posts {\n        created_by{\n          name\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n    \"username\":\"ArshiA\"\n}"
									}
								},
								"url": {
									"raw": "http://{{URL}}/query",
									"protocol": "http",
									"host": [
										"{{URL}}"
									],
									"path": [
										"query"
									]
								},
								"description": "returns a list of posts that are owned by the current user"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "whoami",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTAzNjA3MTMsInVzZXJuYW1lIjoiQXJzaGlBIn0.asMRoBoFu93ItzI5yGevy7Z3cYvvUQbapt1sfMFDKoE"
		},
		{
			"key": "URL",
			"value": "localhost:8080"
		}
	]
}